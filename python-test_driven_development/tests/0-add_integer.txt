'''
Tests for the module 0-add_integer.

First import the module

    >>> add_integer = __import__('0-add_integer').add_integer

Input casting into int

    >>> print(add_integer(1.0234, 2.64))
    3

Input with wrong type

    >>> print(add_integer('hello',1))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> print(add_integer(1, 'hello'))
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Negative numbers

    >>> print(add_integer(100, -2))
    98
    
    >>> print(add_integer(-100, 2))
    -98
    
    >>> print(add_integer(-100, -2))
    -102

Wrong or no value given

    >>> print(add_integer(None))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> print(add_integer())
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> print(add_integer(1))
    99

    >>> print(add_integer(1e+500, 1))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    >>> print(add_integer(float('Nan'), 1)
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

'''
